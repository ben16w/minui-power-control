#!/bin/sh
BIN_DIR="$(dirname "$0")"

architecture=arm
if uname -m | grep -q '64'; then
    architecture=arm64
fi

export PATH="$BIN_DIR/$architecture:$BIN_DIR/$PLATFORM:$BIN_DIR:$PATH"

SYSTEM_SUSPEND_SCRIPT="$SYSTEM_PATH/bin/suspend"

suspend_system() {
    SCRIPT="$SYSTEM_SUSPEND_SCRIPT"
    PID="$1"

    echo "Suspending system..."

    if [ ! -f "$SCRIPT" ]; then
        echo "Suspend script not found. Is deep sleep supported on this device?"
        fallback_suspend "$PID"
        return
    fi
    chmod +x "$SCRIPT"

    if [ -n "$PID" ]; then
        echo "Suspending emulator process with PID: $PID"
        kill -STOP "$PID" || true
    fi

    "$SCRIPT"

    if [ -n "$PID" ]; then
        echo "Resuming emulator process with PID: $PID"
        kill -CONT "$PID" || true
    fi

    set-brightness 2
    "$SYSTEM_PATH/bin/syncsettings.elf" || true
}

fallback_suspend() {
    PID="$1"
    echo "Fallback suspend for emulator process with PID: $PID"

    if [ -z "$PID" ]; then
        echo "No PID provided for fallback suspend."
        return 1
    fi

    if [ ! -f /tmp/powercontrol-suspend-active ]; then
        echo "Pausing emulator process with PID: $PID"
        kill -STOP "$PID" || true
        set-brightness 0
        touch /tmp/powercontrol-suspend-active
    else
        echo "Resuming emulator process with PID: $PID"
        kill -CONT "$PID" || true
        "$SYSTEM_PATH/bin/syncsettings.elf" || true
        rm -f /tmp/powercontrol-suspend-active
    fi
}

main() {
    if [ -f /tmp/powercontrol-emulator-pid ]; then
        PROCESS_PID=$(cat /tmp/powercontrol-emulator-pid)
        echo "Emulator PID file found. Killing the emulator process with PID: $PROCESS_PID"

        if [ -z "$PROCESS_PID" ] || ! kill -0 "$PROCESS_PID" 2>/dev/null; then
            echo "Emulator process $PROCESS_PID not found."
            exit 1
        fi

        suspend_system "$PROCESS_PID"
    elif [ -f /tmp/powercontrol-dummy-pid ]; then
        echo "Dummy PID file found. No emulator process to suspend."
        suspend_system
    else
        echo "Emulator PID file not found."
        exit 1
    fi
}

main "$@"
